{
  "openapi": "3.0.1",
  "info": {
    "title": "N11 API",
    "version": "1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Manager Controller",
      "description": "Here you can apply for a loan with Login and without registration. You can query the credit result"
    },
    {
      "name": "Authentication Controller",
      "description": "Here we can login to get authorization, we can register user"
    },
    {
      "name": "User Controller",
      "description": "Here we can list, save, delete and update users."
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "User Controller"
        ],
        "summary": "Listing all customers - authorization is required",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Controller"
        ],
        "summary": "Add new customer - authorization is required",
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSaveEntityDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users/updateUser": {
      "post": {
        "tags": [
          "User Controller"
        ],
        "summary": "Update existing customer information - authorization is required",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/managers/interrogate": {
      "post": {
        "tags": [
          "Manager Controller"
        ],
        "summary": "Query the application result - authorization is not required",
        "operationId": "interrogateCredit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterrogateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/managers/applyCredit": {
      "post": {
        "tags": [
          "Manager Controller"
        ],
        "summary": "Applying for a loan. Requires only salary and optional guarantee information - authorization is required",
        "operationId": "applyCredit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplySaveEntityDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/managers/applyCreditWithoutRegistered": {
      "post": {
        "tags": [
          "Manager Controller"
        ],
        "summary": "Applying for a loan. In addition to salary and optional guarantee information, user information is also required. - authorization is not required",
        "operationId": "applyCreditWithoutRegistered",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyExtendedSaveEntityDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication Controller"
        ],
        "summary": "You can register a user. You can use the password you set to login - authorization is not required",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSaveEntityDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication Controller"
        ],
        "summary": "You can add the token you receive as a login result to the authorize section without a bearer.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User Controller"
        ],
        "summary": "Get user Info with userId - authorization is required",
        "operationId": "findByUserId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Controller"
        ],
        "summary": "Delete with userId - authorization is required",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/allInfo": {
      "get": {
        "tags": [
          "User Controller"
        ],
        "summary": "Lists all registered credit transactions with user information - authorization is required",
        "operationId": "getAllInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSaveEntityDto": {
        "required": [
          "dateOfBirth",
          "name",
          "password",
          "surname",
          "tckn",
          "telephone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "surname": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "tckn": {
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "telephone": {
            "maxLength": 2147483647,
            "minLength": 10,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "ADMIN"
            ]
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "tckn": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "ADMIN"
            ]
          },
          "password": {
            "type": "string"
          }
        }
      },
      "InterrogateDto": {
        "required": [
          "dateOfBirth",
          "tckn"
        ],
        "type": "object",
        "properties": {
          "tckn": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          }
        }
      },
      "ApplySaveEntityDto": {
        "required": [
          "salary",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "salary": {
            "type": "number"
          },
          "guarantee": {
            "type": "number"
          }
        }
      },
      "ApplyExtendedSaveEntityDto": {
        "required": [
          "dateOfBirth",
          "name",
          "salary",
          "surname",
          "tckn",
          "telephone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "surname": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "tckn": {
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "telephone": {
            "maxLength": 2147483647,
            "minLength": 10,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "userType": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "ADMIN"
            ]
          },
          "salary": {
            "type": "number"
          },
          "guarantee": {
            "type": "number"
          }
        }
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "name": "bearerAuth",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}